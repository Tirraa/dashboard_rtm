import type { EmptyString } from '@rtm/shared-types/CustomUtilityTypes';
import type { WriterFunction } from 'ts-morph';

import { VariableDeclarationKind, StructureKind, Project, Writers } from 'ts-morph';

import type { CategoriesMetadatas } from '../../types/Metadatas';

import {
  AUTOGENERATED_CODE_COMMENT_STR,
  TS_MORPH_FORMATTER_SETTINGS,
  GENERATIONS_TARGET_FOLDER,
  PAGES_TITLES_CONST_STR,
  TAB_SIZE
} from '../../config';

const emptyString: EmptyString = '';

export default async function generateI18nPagesTitles(
  blogArchitecture: CategoriesMetadatas,
  pretty: boolean,
  __PAGES_TITLES_CONST_STR: string = PAGES_TITLES_CONST_STR,
  __TARGET_FOLDER: string = GENERATIONS_TARGET_FOLDER
) {
  const project = new Project();

  const pagesTitles = {} as Record<string, string>;
  for (const category of Object.keys(blogArchitecture)) {
    pagesTitles[category] = emptyString;
    for (const subcategory of Object.keys(blogArchitecture[category])) pagesTitles[subcategory] = emptyString;
  }

  const initializerWriterFunction: WriterFunction = Writers.assertion(
    JSON.stringify(pagesTitles, null, pretty ? TAB_SIZE : undefined).replace(/""/g, '_'),
    'const'
  );

  const sourceFile = project.createSourceFile(
    `${__TARGET_FOLDER}/${__PAGES_TITLES_CONST_STR}.ts`,
    {
      statements: [
        {
          declarations: [
            {
              type: 'EmptyString',
              initializer: "''",
              name: '_'
            }
          ],
          declarationKind: VariableDeclarationKind.Const,
          kind: StructureKind.VariableStatement
        },
        {
          declarations: [
            {
              initializer: initializerWriterFunction,
              name: __PAGES_TITLES_CONST_STR
            }
          ],
          declarationKind: VariableDeclarationKind.Const,
          kind: StructureKind.VariableStatement,
          isExported: false
        }
      ]
    },
    { overwrite: true }
  );
  const oldTextLength = sourceFile.getText().length;

  // eslint-disable-next-line no-magic-numbers
  sourceFile.insertText(0, AUTOGENERATED_CODE_COMMENT_STR);
  sourceFile.insertText(
    oldTextLength + AUTOGENERATED_CODE_COMMENT_STR.length,
    "type EmptyString = '';\n" + `export default ${__PAGES_TITLES_CONST_STR};`
  );
  if (pretty) sourceFile.formatText(TS_MORPH_FORMATTER_SETTINGS);
  await sourceFile.save();
}
