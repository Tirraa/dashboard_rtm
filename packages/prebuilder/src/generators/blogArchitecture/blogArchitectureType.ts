import { AUTOGENERATED_CODE_COMMENT_STR, BLOG_ARCHITECTURE_TYPE_STR, GENERATIONS_TARGET_FOLDER } from '@/config';
import type { CategoriesMetadatas } from '@/types/metadatas';
import type { WriterFunction } from 'ts-morph';
import { Project, StructureKind, Writers } from 'ts-morph';

export default function generateBlogArchitectureType(blogArchitecture: CategoriesMetadatas) {
  const project = new Project();

  const writerFunction = (blogArchitecture: CategoriesMetadatas): WriterFunction =>
    Writers.objectType({
      properties: Object.entries(blogArchitecture).map(([category, subcategories]) => ({
        name: `'${category}'`,
        type: subcategories.map((sc) => `'${sc}'`).join(' | ')
      }))
    });

  const sourceFile = project.createSourceFile(
    `${GENERATIONS_TARGET_FOLDER}/${BLOG_ARCHITECTURE_TYPE_STR}.ts`,
    {
      statements: [
        {
          kind: StructureKind.TypeAlias,
          name: BLOG_ARCHITECTURE_TYPE_STR,
          type: writerFunction(blogArchitecture),
          isExported: false
        }
      ]
    },
    { overwrite: true }
  );
  const oldTextLength = sourceFile.getText().length;

  sourceFile.insertText(0, AUTOGENERATED_CODE_COMMENT_STR);
  sourceFile.insertText(oldTextLength + AUTOGENERATED_CODE_COMMENT_STR.length, `export default ${BLOG_ARCHITECTURE_TYPE_STR};`);
  sourceFile.formatText({ ensureNewLineAtEndOfFile: true });
  sourceFile.saveSync();
}
