# {ToDo} Update pnpm/action-setup when this will be merged & released https://github.com/pnpm/action-setup/issues/99

name: CI/PR

on:
  pull_request:
    branches: ['**']

  workflow_dispatch:

jobs:
  format-check:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Install project
        run: make install
      - name: Formatcheck
        run: make ci:format-check

  lint:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Install project
        run: make install
      - name: Run ESLint
        run: make ci:lint

  typecheck:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Initialize project
        run: make initialize
      - name: Typecheck
        run: make ci:typecheck

  test-before-build:
    strategy:
      matrix:
        node-version: [18, 20]
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Enable long paths support
        if: matrix.os == 'windows-latest'
        run: git config --system core.longpaths true
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Use Node.js (18 or 20)
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: Initialize project
        run: make initialize
      - name: Tests (before build)
        run: make before-build:test

  build:
    runs-on: 'ubuntu-latest'
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Install project
        run: make install
      - name: Create .env
        run: cp .env_example .env
      - name: Build
        run: make

  test-after-build:
    strategy:
      matrix:
        node-version: [18, 20]
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Enable long paths support
        if: matrix.os == 'windows-latest'
        run: git config --system core.longpaths true
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Use Node.js (18 or 20)
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: Initialize project
        run: make initialize
      - name: Tests (after build)
        run: make after-build:test

  ts-prune:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Use Python 3.10.12
        uses: actions/setup-python@v3
        with:
          python-version: 3.10.12
      - name: Backup old symbolic link
        run: sudo cp /usr/bin/python3 /usr/bin/python3.bak
      - name: Force symbolic link to Python 3.10.12
        run: sudo ln -sf /opt/hostedtoolcache/Python/3.10.12/x64/bin/python3 /usr/bin/python3
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Install project
        run: make install
      - name: Run ts-prune
        run: make ts-prune-verbose
      - name: Restore old symbolic link
        run: sudo rm -f /usr/bin/python3 && sudo mv /usr/bin/python3.bak /usr/bin/python3

  simulate-deploy-discarding-build-cache:
    strategy:
      matrix:
        node-version: [18, 20]
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Enable long paths support
        if: matrix.os == 'windows-latest'
        run: git config --system core.longpaths true
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Use Node.js (18 or 20)
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: Create .env
        run: cp .env_example .env
      - name: Run simulation
        run: make simulate-deploy-discarding-build-cache
